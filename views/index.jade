!!!
html(lang="en", manifest="/cache.manifest")
  head
    title Outburst by Aranja
    link(rel='stylesheet', href='/css/style.css')
  body
    #wrapper
      #box
        h1 Outburst
        h2.by by 
          a(href="http://nodeknockout.com/teams/aranja") Aranja
        p Outburst is a multiplayer game that combines the best of a tower defense and a shooter. It is a co op game where players assist defending their base from enemies.

        .row
          .col50
            h2 Requirements
            ul.requirements
              li(data-bind="css: {ok: supportsWebgl, no: !supportsWebgl}") WebGL 3D support
              li(data-bind="css: {ok: supportsWebsockets, no: !supportsWebsockets}") Websocket support
              li(data-bind="css: {pending: connection() == null, ok: connection() == true, no: connection() == false}") Connection
            p(data-bind="visible: failingWebglContext", style="display: none;")
              | It seems your browser is unable to display 3D graphics using WebGL.
              | For more information, visit <a href="http://get.webgl.org">get.webgl.org</a>.
            p(data-bind="visible: supportsWebsockets && connection() == false", style="display: none;")
              | Even though your browser supports websockets, we were unable to connect to the
              | game servers. There is likely some firewall or other software blocking your
              | websocket connetions.
            p(data-bind="visible: needsBetterBrowser", style="display: none;")
              | Your browser is missing some requirements. Please try another browser. We recommend
              a(href="http://www.google.com/chrome") Google Chrome
              | .

            h2 Start Game
            p.play
              a(href="/oauth/authenticate")
                img(src="game/images/twitter-logon.png")
              span or
              a(href="/game") Play as anonymous
          .col50
            h2 Controls
            ul
              li W, A, S, D or arrows to move player
              li Mouse to aim
              li Mouse wheel or z and x to zoom
              li Enter or y to chat
              li Esc to exit chat
              li 1 to use pistol
              li 2 to use machine gun
              li 3 to use shotgun

    script(src="js/libs/modernizr.js")
    script(src="js/libs/knockout.js")
    script(src="/socket.io/socket.io.js")
    :coffeescript
      # A better test for webgl support
      Modernizr.addTest "webglcontext", ->
        canvas = document.createElement("canvas")
        for c in ["webgl", "experimental-webgl", "moz-webgl", "o-webgl", "webkit-3d", "3d"]
          try
            return true if canvas.getContext c
          catch e
            console.log e
        return false

      # Test if we can connect to server using socket.io
      testConnection = ->
        socket = io.connect()
        socket.on 'connect', ->
          vm.connection true
          socket.disconnect()
        socket.on 'error', (err) ->
          vm.connection false

      # ViewModel for page
      vm =
        supportsWebgl: Modernizr.webgl and Modernizr.webglcontext
        supportsWebsockets: Modernizr.websockets
        failingWebglContext: Modernizr.webgl and not Modernizr.webglcontext
        needsBetterBrowser: not (Modernizr.websockets and Modernizr.webgl)
        connection: ko.observable(Modernizr.websockets and null)

      ko.applyBindings vm
      testConnection()

    script
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-25659758-1']);
      _gaq.push(['_trackPageview']);
      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();

